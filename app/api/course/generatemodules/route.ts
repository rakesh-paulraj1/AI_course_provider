import { NextRequest, NextResponse } from "next/server";
import { getServerSession } from "next-auth/next";
import { NEXT_AUTH } from "@/utils/auth";
import { GoogleGenAI } from "@google/genai";

export async function POST(req: NextRequest) {
  try {
    // Initialize Google GenAI client
    const genAI = new GoogleGenAI({
      apiKey: process.env.GEMINI_API_KEY
    });

    // Verify authentication
    const session = await getServerSession(NEXT_AUTH);
    if (!session) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
    }

    // Parse and validate request
    const { moduleId, prompt } = await req.json();
    
    if ( !prompt) {
      return NextResponse.json(
        { error: "prompt are required" },
        { status: 400 }
      );
    }
     
    if (!moduleId) {
      return NextResponse.json(
        { error: "Module ID are required" },
        { status: 400 }
      );
    }

    
    const generationPrompt = `
    You are an expert teacher's assistant. Generate comprehensive educational content for a course module based on the following prompt.
    The content should be well-structured, informative, and suitable for students.
    Return the content in Markdown format with proper headings, paragraphs, and formatting.
    
    Include these sections if applicable:
    - Learning Objectives
    - Key Concepts
    - Detailed Explanations
    - Examples
    - Summary
    add necesary spaces between sections
    
    Prompt: ${prompt}
    `;

    const result = await genAI.models.generateContent({
      model: "gemini-1.5-flash",
      contents: generationPrompt,
    });

    // Process the AI response
    const content = result.text;
    if (!content) {
      throw new Error("No content generated by AI model");
    }

    return NextResponse.json({ 
      success: true,
      content,
      model: "gemini-1.5-flash"
    });

  } catch (error) {
    console.error("Error generating module content:", error);
    return NextResponse.json(
      { 
        success: false,
        error: "Failed to generate module content",
        details: error instanceof Error ? error.message : String(error)
      },
      { status: 500 }
    );
  }
}